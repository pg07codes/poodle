{"version":3,"sources":["helpers/parseSearchQuery.js","components/Search/Filters/index.js","components/Search/index.js","helpers/getShortNews.js","components/ShortNews/index.js","components/CustomBackground/index.js","components/Notepad/NoteInput/index.js","components/Notepad/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["parseSearchQuery","filter","query","url","window","open","Filters","props","Grid","container","justify","item","xs","map","e","isSelected","key","Chip","icon","label","clickable","onClick","newFilter","setFilter","color","size","variant","deleteIcon","chips","useStyles","makeStyles","input","backgroundColor","borderRadius","Search","classes","useState","searchQuery","setSearchQuery","inputRef","React","createRef","inputProps","onKeyDown","keyCode","trim","target","value","ref","InputProps","endAdornment","InputAdornment","position","current","Fragment","md","TextField","className","onChange","fullWidth","autoFocus","margin","lessThanTwelveHourAgo","date","Date","now","a","localStorage","getItem","hn","JSON","parse","fetchedAt","news","fetch","fetchedIds","json","slice","fetchingNews","id","Promise","all","fetchedNews","resp","reduce","acc","i","undefined","temp","URL","by","title","website","host","push","fetchedNewsObject","setItem","stringify","root","bottom","left","newsDrawer","maxHeight","newsCardsStyle","ShortNews","newsGroupState","setNewsGroupState","setNews","useEffect","getShortNews","then","toggleDrawer","event","type","Tooltip","aria-label","Fab","Drawer","anchor","onClose","role","Paper","Typography","gutterBottom","href","display","newsCards","right","CustomBackground","inputFile","document","body","style","click","ev","reader","FileReader","files","length","readAsDataURL","onload","result","accept","info","maxWidth","padding","fontSize","NoteInput","note","setNote","addNoteToNotepad","maxlength","top","notepadDrawer","card","TemporaryDrawer","notepadState","setNotepadState","notes","setNotes","nanoid","swapThreshold","list","setList","Card","onDoubleClick","CardContent","component","noteCards","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"iQAEe,SAASA,EAAiBC,EAAQC,GAE7C,GAAe,WAAXD,EAAqB,CACrB,IAAIE,EAAG,0CAAsCD,GAC7CE,OAAOC,KAAKF,EAAK,eAEd,GAAe,YAAXF,EAAsB,CAC7B,IAAIE,EAAG,uDAAmDD,GAC1DE,OAAOC,KAAKF,EAAK,eAEd,GAAe,eAAXF,EAAyB,CAChC,IAAIE,EAAG,oCAAgCD,GACvCE,OAAOC,KAAKF,EAAK,eAEd,GAAe,eAAXF,EAAyB,CAChC,IAAIE,EAAG,0CAAsCD,GAC7CE,OAAOC,KAAKF,EAAK,eAEd,GAAe,UAAXF,EAAoB,CAC3B,IAAIE,EAAG,qCAAiCD,GACxCE,OAAOC,KAAKF,EAAK,W,wDChBV,SAASG,EAAQC,GAyB5B,OAEI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UAEpB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAFnB,IAJY,CAAC,SAAU,UAAW,aAAc,aAAc,SAQjDC,KAAI,SAAAC,GAAC,OAvBR,SAACb,EAAQc,GAAT,OACV,kBAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAACI,IAAKf,GACf,kBAACgB,EAAA,EAAD,CACIC,KAAMH,EAAa,kBAAC,IAAD,MAA6B,KAChDI,MAAOlB,EACPmB,WAAS,EACTC,SAVUC,EAUcrB,EAVA,SAACa,GACjCP,EAAMgB,UAAUD,KAURE,MAAM,YACNC,KAAK,QACLC,QAAUX,EAAa,UAAY,WACnCY,WAAY,kBAAC,IAAD,SAdH,IAACL,EA2BIM,CAAMd,EAAIP,EAAMN,SAAWa,MAE7C,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IANnB,MCxBR,IAAMiB,EAAYC,YAAW,CACzBC,MAAO,CACHC,gBAAiB,QACjBC,aAAa,SAMN,SAASC,IACpB,IAAMC,EAAUN,IADa,EAESO,mBAAS,IAFlB,mBAEtBC,EAFsB,KAETC,EAFS,OAGDF,mBAAS,UAHR,mBAGtBnC,EAHsB,KAGdsB,EAHc,KAIvBgB,EAASC,IAAMC,YAyBrB,IAAMC,EAAa,CACfC,UApBJ,SAA6B7B,GACP,KAAdA,EAAE8B,SAAyC,KAAvBP,EAAYQ,SAEhC7C,EAAiBC,EAAQoC,GACzBvB,EAAEgC,OAAOC,MAAQ,GACjBT,EAAe,MAgBnBU,IAAIT,GAGFU,EAAa,CACfC,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,kBAAC,IAAD,CAAY/B,QAlBxB,WAE+B,KAAvBgB,EAAYQ,SACZ7C,EAAiBC,EAAQoC,GACzBE,EAASc,QAAQN,MAAQ,GACzBT,EAAe,UAkBvB,OAEI,kBAAC,IAAMgB,SAAP,KAEI,kBAAC9C,EAAA,EAAD,CAAMC,WAAS,GAEX,kBAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG2C,GAAI,IAF1B,MAII,kBAAC/C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG2C,GAAI,GAElB,kBAACC,EAAA,EAAD,CAAWC,UAAWtB,EAAQJ,MAAO2B,SA9CrD,SAAsB5C,GAClBwB,EAAexB,EAAEgC,OAAOC,QA6CiDY,WAAW,EAAMC,WAAS,EAACC,OAAO,SAASnB,WAAYA,EAAYO,WAAYA,EAAYvB,QAAQ,cAIpK,kBAAClB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG2C,GAAI,IAV1B,OAcA,kBAACjD,EAAD,CAASL,OAAQA,EAAQsB,UAAWA,K,sDC5E1CuC,EAAwB,SAACC,GAG7B,OAAOA,EADeC,KAAKC,MADjB,O,4CAKG,oCAAAC,EAAA,yDAGsB,OAA/BC,aAAaC,QAAQ,MAHZ,mBAMPC,EAAKC,KAAKC,MAAMJ,aAAaC,QAAQ,QAErCN,EAAsBO,EAAGG,WARlB,yCAUDH,EAAGI,MAVF,uBAiBUC,MAAM,sEAjBhB,cAiBTC,EAjBS,gBAkBMA,EAAWC,OAlBjB,cAmBbD,GADAA,EAlBa,QAmBWE,MAAM,EAAG,IAG7BC,EAAeH,EAAW9D,KAAI,SAAAkE,GAAE,OAAIL,MAAM,8CAAD,OAA+CK,EAA/C,0BAtBhC,UAuBWC,QAAQC,IAAR,YAAgBH,IAvB3B,eAwBbI,GADIA,EAvBS,QAwBarE,KAAI,SAAAsE,GAAI,OAAIA,EAAKP,UAxB9B,UAyBOI,QAAQC,IAAR,YAAgBC,IAzBvB,eA2BbA,GAFAA,EAzBa,QA2BaE,QAAO,SAAUC,EAAKC,GAC9C,QAAcC,IAAVD,EAAEnF,IAAmB,CACvB,IAAIqF,EAAO,GACPrF,EAAM,IAAIsF,IAAJ,UAAWH,EAAEnF,MAOvB,OANAqF,EAAKT,GAAKO,EAAEP,GACZS,EAAKE,GAAKJ,EAAEI,GACZF,EAAKrF,IAAMmF,EAAEnF,IACbqF,EAAKG,MAAQL,EAAEK,MACfH,EAAKI,QAAUzF,EAAI0F,KACnBR,EAAIS,KAAKN,GACFH,EAET,OAAOA,IACN,IAECU,EAAoB,CAAEvB,UAAWR,KAAKC,MAAOQ,KAAMS,GAEvDf,aAAa6B,QAAQ,KAAM1B,KAAK2B,UAAUF,IA5C7B,kBA8CNA,EAAkBtB,MA9CZ,6C,qECGT5C,EAAYC,YAAW,CACzBoE,KAAM,CACF9C,SAAU,WACV+C,OAAQ,MACRC,KAAM,OAEVC,WAAY,CACRC,UAAW,QAEfC,eAAe,CACX1C,OAAO,WAIA,SAAS2C,IACpB,IAAMrE,EAAUN,IADgB,EAEYO,oBAAS,GAFrB,mBAEzBqE,EAFyB,KAETC,EAFS,OAGRtE,mBAAS,IAHD,mBAGzBqC,EAHyB,KAGnBkC,EAHmB,KAKhCC,qBAAU,YDtBC,2CCwBPC,GAAeC,MAAK,SAAC3B,GACjBwB,EAAQxB,QAGb,IAGH,IAAM4B,EAAe,SAAC1G,GAAD,OAAU,SAAC2G,IACT,YAAfA,EAAMC,MAAqC,QAAdD,EAAMhG,KAA+B,UAAdgG,EAAMhG,MAI9D0F,EAAkBrG,KAiCtB,OAEI,yBAAKoD,UAAWtB,EAAQ+D,MACpB,kBAACgB,EAAA,EAAD,CAASvB,MAAM,aAAawB,aAAW,cACnC,kBAACC,EAAA,EAAD,CAAK/F,QAAS0F,GAAa,GAAOtF,KAAK,SAASD,MAAM,YAAY2F,aAAW,QACzE,kBAAC,IAAD,QAGR,kBAACE,EAAA,EAAD,CAAQC,OAAO,SAASjH,KAAMoG,EAAgBc,QAASR,GAAa,IAChE,yBACItD,UAAWtB,EAAQkE,WACnBmB,KAAK,gBAIL,kBAAChH,EAAA,EAAD,CAAMC,WAAS,GACVgE,EAAK5D,KAAI,SAAAyE,GAAC,OA9C/B,SAAmBA,GACf,OACI,kBAAC,IAAMhC,SAAP,CAAgBtC,IAAKsE,EAAEP,IACnB,kBAACvE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG2C,GAAI,IAD1B,MAGI,kBAAC/C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI2C,GAAI,EAAGE,UAAWtB,EAAQoE,gBAEzC,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYhG,QAAQ,KAAKiG,cAAY,GAChCrC,EAAEK,OAGP,kBAAC+B,EAAA,EAAD,CAAYhG,QAAQ,QAAQiG,cAAY,GAAxC,uBACwB,uBAAGC,KAAMtC,EAAEnF,IAAK2C,OAAO,UAAWwC,EAAEM,UAI5D,kBAAC8B,EAAA,EAAD,CAAYhG,QAAQ,YAAYmG,QAAQ,QAAQF,cAAY,GAA5D,aACerC,EAAEI,MAMzB,kBAAClF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG2C,GAAI,IAtB1B,OA4C2BuE,CAAUxC,U,qBCvF3CzD,EAAYC,YAAW,CACzBoE,KAAM,CACF9C,SAAU,WACV+C,OAAQ,MACR4B,MAAM,SAIC,SAASC,IACpB,IAAM7F,EAAQN,IAEVoG,EAAYzF,IAAMC,YAoCtB,OAlCAmE,qBAAU,WAEiC,OAAnCzC,aAAaC,QAAQ,YACrB8D,SAASC,KAAKC,MAAM,oBAApB,eAAkDjE,aAAaC,QAAQ,UAAvE,MACA8D,SAASC,KAAKC,MAAM,yBAA2B,QAC/CF,SAASC,KAAKC,MAAM,qBAAuB,YAC3CF,SAASC,KAAKC,MAAM,mBAAqB,YA6B7C,yBAAK3E,UAAWtB,EAAQ+D,MACpB,kBAACgB,EAAA,EAAD,CAASvB,MAAM,oBAAoBwB,aAAW,qBAC1C,kBAACC,EAAA,EAAD,CAAK5F,MAAM,YAAYC,KAAK,SAASJ,QAPjD,WACI4G,EAAU5E,QAAQgF,SAM0DlB,aAAW,QAC3E,kBAAC,IAAD,QAGR,2BAAOiB,MAAO,CAAEP,QAAS,QAAU7E,IAAKiF,EAAWvE,SA/B3D,SAAsB4E,GAElB,IAAIC,EAAS,IAAIC,WAEc,IAA3BF,EAAGxF,OAAO2F,MAAMC,QAAgBJ,EAAGxF,OAAO2F,MAAM,GAAGhH,KAAO,MAC1D8G,EAAOI,cAAcL,EAAGxF,OAAO2F,MAAM,IAErCF,EAAOK,OAAS,SAAAtD,GAEZnB,aAAa6B,QAAQ,SAAUV,EAAExC,OAAO+F,QACxCX,SAASC,KAAKC,MAAM,oBAApB,eAAkD9C,EAAExC,OAAO+F,OAA3D,MACAX,SAASC,KAAKC,MAAM,yBAA2B,QAC/CF,SAASC,KAAKC,MAAM,qBAAuB,YAC3CF,SAASC,KAAKC,MAAM,mBAAqB,WAkB8BnB,KAAK,OAAO6B,OAAO,sC,6BCtDpGjH,EAAYC,YAAW,CACzBiH,KAAM,CACFC,SAAS,OACTC,QAAQ,UACR,MAAM,CACFC,SAAS,YAON,SAASC,EAAU5I,GAC9B,IAAM4B,EAAUN,IADqB,EAEbO,mBAAS,IAFI,mBAE9BgH,EAF8B,KAExBC,EAFwB,KAGjC9G,EAAWC,IAAMC,YAyBrB,IAAMC,EAAa,CACfC,UApBJ,SAA6B7B,GACP,KAAdA,EAAE8B,SAAkC,KAAhBwG,EAAKvG,SAEzBtC,EAAM+I,iBAAiBF,GACvBtI,EAAEgC,OAAOC,MAAQ,GACjBsG,EAAQ,MAgBZrG,IAAKT,EACLgH,UAAW,KAGTtG,EAAa,CACfC,aACI,kBAACC,EAAA,EAAD,CAAgB9B,QAlBxB,WAEwB,KAAhB+H,EAAKvG,SACLtC,EAAM+I,iBAAiBF,GACvB7G,EAASc,QAAQN,MAAQ,GACzBsG,EAAQ,MAaoCjG,SAAS,OACjD,kBAAC,IAAD,QAKZ,OAEI,kBAAC,IAAME,SAAP,KACI,kBAACE,EAAA,EAAD,CAAWE,SAxCnB,SAAsB5C,GAClBuI,EAAQvI,EAAEgC,OAAOC,QAuCsBa,WAAS,EAACC,OAAO,QAAQnB,WAAYA,EAAYO,WAAYA,IAChG,yBAAKQ,UAAWtB,EAAQ4G,MACpB,kG,+CCpDVlH,EAAYC,YAAW,CACzBoE,KAAK,CACD9C,SAAU,WACVoG,IAAK,MACLzB,MAAM,OAEV0B,cAAe,CACXR,QAAS,YAEbS,KAAM,CACFV,SAAU,OACVnF,OAAQ,aAMD,SAAS8F,IACpB,IAAMxH,EAAUN,IADsB,EAEEO,oBAAS,GAFX,mBAE/BwH,EAF+B,KAEjBC,EAFiB,OAGZzH,mBAAS,IAHG,mBAG/B0H,EAH+B,KAGxBC,EAHwB,KAKtCnD,qBAAU,WACgC,OAAlCzC,aAAaC,QAAQ,UACrB2F,EAASzF,KAAKC,MAAMJ,aAAaC,QAAQ,aAE9C,IAEH,IAAM2C,EAAe,SAAC1G,GAAD,OAAU,SAAC2G,IACT,YAAfA,EAAMC,MAAqC,QAAdD,EAAMhG,KAA+B,UAAdgG,EAAMhG,MAI9D6I,EAAgBxJ,KA6BpB,OACI,yBAAKoD,UAAWtB,EAAQ+D,MAEhB,kBAACgB,EAAA,EAAD,CAASvB,MAAM,WAAWwB,aAAW,YACjC,kBAACC,EAAA,EAAD,CAAK/F,QAAS0F,GAAa,GAAOtF,KAAK,SAASD,MAAM,YAAY2F,aAAW,QACzE,kBAAC,IAAD,QAGR,kBAACE,EAAA,EAAD,CAAQC,OAAO,QAAQjH,KAAMuJ,EAAcrC,QAASR,GAAa,IAC7D,yBACItD,UAAWtB,EAAQsH,cACnBjC,KAAK,gBAKL,kBAAC2B,EAAD,CAAWG,iBAzCN,SAACF,GAEtB,IAAI5D,EAAI,CAAI,CAAET,GAAIiF,YAAO,IAAKjH,MAAOqG,IAA7B,mBAAwCU,IAChDC,EAASvE,GACTrB,aAAa6B,QAAQ,QAAS1B,KAAK2B,UAAUT,OAuC7B,kBAAC,IAAD,CAAeyE,cAAe,GAAKC,KAAMJ,EAAOK,QAASJ,GACpDD,EAAMjJ,KAAI,SAAAyE,GAAC,OA7BlB,SAACA,GAAD,OACd,kBAAC8E,EAAA,EAAD,CAAMC,eARYtF,EAQgBO,EAAEP,GARX,SAACjE,GAE1B,IAAI0E,EAAOsE,EAAM7J,QAAO,SAAAqF,GAAC,OAAKA,EAAEP,KAAOA,KACvCgF,EAASvE,GACTrB,aAAa6B,QAAQ,QAAS1B,KAAK2B,UAAUT,MAIJxE,IAAKsE,EAAEP,GAAItB,UAAWtB,EAAQuH,MACnE,kBAACY,EAAA,EAAD,KACI,kBAAC5C,EAAA,EAAD,CAAYhG,QAAQ,UAAU6I,UAAU,KACnCjF,EAAEvC,SAXE,IAACgC,EAoCkByF,CAAUlF,UC5EvCmF,OAZf,WAEE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACjE,EAAD,MACA,kBAACwB,EAAD,QCDc0C,QACW,cAA7BtK,OAAOuK,SAASC,UAEe,UAA7BxK,OAAOuK,SAASC,UAEhBxK,OAAOuK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF9C,SAAS+C,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtE,MAAK,SAAAuE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.abdb2bfd.chunk.js","sourcesContent":["\n\nexport default function parseSearchQuery(filter, query) {\n    \n    if (filter === \"google\") {\n        let url = `https://www.google.com/search?q=${query}`;\n        window.open(url, '_blank');\n\n    } else if (filter === \"youtube\") {\n        let url = `https://www.youtube.com/results?search_query=${query}`;\n        window.open(url, '_blank');\n\n    } else if (filter === \"duckduckgo\") {\n        let url = `https://duckduckgo.com/?q=${query}`;\n        window.open(url, '_blank');\n\n    } else if (filter === \"soundcloud\") {\n        let url = `https://soundcloud.com/search?q=${query}`;\n        window.open(url, '_blank');\n\n    } else if (filter === \"vimeo\") {\n        let url = `https://vimeo.com/search?q=${query}`;\n        window.open(url, '_blank');\n    }\n}","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport DoneIcon from '@material-ui/icons/Done'\nimport Chip from '@material-ui/core/Chip'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nexport default function Filters(props) {\n\n\n\n    let onClickHandler = (newFilter) => (e) => {\n        props.setFilter(newFilter);\n    }\n\n    const chips = (filter, isSelected) => (\n        <Grid item xs key={filter}>\n            <Chip\n                icon={isSelected ? <CheckCircleOutlineIcon /> : null}\n                label={filter}\n                clickable\n                onClick={onClickHandler(filter)}\n                color=\"secondary\"\n                size=\"small\"\n                variant={(isSelected ? \"default\" : \"outlined\")}\n                deleteIcon={<DoneIcon />}\n            />\n        </Grid>\n    );\n\n    const FILTERS = [\"google\", \"youtube\", \"duckduckgo\", \"soundcloud\", \"vimeo\"];\n\n    return (\n\n        <Grid container justify=\"center\">\n\n            <Grid item xs={3}></Grid> {/*dummy items for proper alignment  */}\n\n            {FILTERS.map(e => chips(e, (props.filter === e ? true : false)))}\n\n            <Grid item xs={3}></Grid>  {/* dummy items for proper alignment*/}\n\n        </Grid>\n\n    );\n}","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport parseSearchQuery from './../../helpers/parseSearchQuery';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Filters from './Filters';\n\nconst useStyles = makeStyles({\n    input: {\n        backgroundColor: 'white',\n        borderRadius:'7px'\n    }\n});\n\n    \n\nexport default function Search() {\n    const classes = useStyles();\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [filter, setFilter] = useState(\"google\");\n    const inputRef=React.createRef();\n\n    function handleChange(e) {\n        setSearchQuery(e.target.value);\n    }\n\n    function handleEnterToSubmit(e) {\n        if (e.keyCode === 13 && searchQuery.trim() !== \"\") {\n\n            parseSearchQuery(filter, searchQuery);\n            e.target.value = \"\";\n            setSearchQuery(\"\");\n        }\n    }\n\n    function handleClickSubmit() {\n\n        if (searchQuery.trim() !== \"\") {\n            parseSearchQuery(filter, searchQuery);\n            inputRef.current.value = \"\";\n            setSearchQuery(\"\");\n        }\n\n    }\n\n    const inputProps = {\n        onKeyDown: handleEnterToSubmit,\n        ref:inputRef\n    }\n\n    const InputProps = {\n        endAdornment: (\n            <InputAdornment position=\"end\">\n                <SearchIcon onClick={handleClickSubmit}/>\n            </InputAdornment>\n        )\n    }\n\n    return (\n\n        <React.Fragment>\n\n            <Grid container>\n\n                <Grid item xs={2} md={3} />   {/* dummy */}\n\n                <Grid item xs={8} md={6}>\n\n                    <TextField className={classes.input} onChange={handleChange} fullWidth={true} autoFocus margin=\"normal\" inputProps={inputProps} InputProps={InputProps} variant=\"outlined\" />\n\n                </Grid>\n\n                <Grid item xs={2} md={3} />   {/* dummy */}\n\n            </Grid>\n\n            <Filters filter={filter} setFilter={setFilter} />\n\n        </React.Fragment>\n\n\n    );\n}\n","\n\nconst lessThanTwelveHourAgo = (date) => {\n  const H = 12 * 1000 * 60 * 60;\n  const twelveHourAgo = Date.now() - H;\n  return date > twelveHourAgo;\n}\n\nexport default async function () {\n\n\n  if (localStorage.getItem('hn') !== null) {\n    // hn has been fetched\n\n    let hn = JSON.parse(localStorage.getItem('hn'));\n\n    if (lessThanTwelveHourAgo(hn.fetchedAt)) { // self explanatory\n\n      return (hn.news);\n    }\n\n\n  }\n\n  // either hn never fetched or fetchedTwelve hours ago\n  let fetchedIds = await fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\");\n  fetchedIds = await fetchedIds.json()\n  fetchedIds = fetchedIds.slice(0, 31)\n\n  // parallel fetching of all the news here\n  let fetchingNews = fetchedIds.map(id => fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`));\n  let fetchedNews = await Promise.all([...fetchingNews]);\n  fetchedNews = fetchedNews.map(resp => resp.json());\n  fetchedNews = await Promise.all([...fetchedNews]);\n\n  fetchedNews = fetchedNews.reduce(function (acc, i) {\n    if (i.url !== undefined) {\n      let temp = {};\n      let url = new URL(`${i.url}`);\n      temp.id = i.id;\n      temp.by = i.by;\n      temp.url = i.url;\n      temp.title = i.title;\n      temp.website = url.host;\n      acc.push(temp);\n      return acc;\n    }\n    return acc;\n  }, []);\n\n  let fetchedNewsObject = { fetchedAt: Date.now(), news: fetchedNews };\n\n  localStorage.setItem('hn', JSON.stringify(fetchedNewsObject));\n\n  return fetchedNewsObject.news;\n\n};","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport getShortNews from './../../helpers/getShortNews'\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        position: \"absolute\",\n        bottom: '3vh',\n        left: '1vw'\n    },\n    newsDrawer: {\n        maxHeight: \"55vh\"\n    },\n    newsCardsStyle:{\n        margin:'7px 0' // do not change left/right margin or layout breaks \n    }\n});\n\nexport default function ShortNews() {\n    const classes = useStyles();\n    const [newsGroupState, setNewsGroupState] = useState(false);\n    const [news, setNews] = useState([]);\n\n    useEffect(() => {\n\n        getShortNews().then((resp) => {\n            setNews(resp)\n        })\n\n    }, [])\n\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setNewsGroupState(open);\n    };\n\n    function newsCards(i) {\n        return (\n            <React.Fragment key={i.id} >\n                <Grid item xs={1} md={2} />   {/* dummy */}\n\n                <Grid item xs={10} md={8} className={classes.newsCardsStyle} >\n\n                    <Paper >\n                        <Typography variant=\"h5\" gutterBottom>\n                            {i.title}\n                        </Typography>\n\n                        <Typography variant=\"body1\" gutterBottom>\n                            Read Full Story at: <a href={i.url} target=\"_blank\" >{i.website}</a>\n                        </Typography>\n\n\n                        <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\n                            Story by: {i.by}\n                        </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={1} md={2} />   {/* dummy */}\n            </React.Fragment>\n\n        );\n    }\n\n    return (\n\n        <div className={classes.root}>\n            <Tooltip title=\"HackerNews\" aria-label=\"HackerNews\">\n                <Fab onClick={toggleDrawer(true)} size=\"medium\" color=\"secondary\" aria-label=\"edit\">\n                    <DehazeIcon />\n                </Fab>\n            </Tooltip>\n            <Drawer anchor='bottom' open={newsGroupState} onClose={toggleDrawer(false)}>\n                <div\n                    className={classes.newsDrawer}\n                    role=\"presentation\"\n                    // onClick={toggleDrawer(false)}\n                    // onKeyDown={toggleDrawer(false)}\n                >\n                    <Grid container>\n                        {news.map(i => newsCards(i))}\n                    </Grid>\n\n                </div>\n            </Drawer>\n        </div>\n\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles({\n    root: {\n        position: \"absolute\",\n        bottom: '3vh',\n        right:'1vw'\n    }\n})\n\nexport default function CustomBackground() {\n    const classes=useStyles();\n\n    let inputFile = React.createRef();\n\n    useEffect(() => {\n\n        if (localStorage.getItem('bckgrd') !== null) {\n            document.body.style['background-image'] = `url(\"${localStorage.getItem('bckgrd')}\")`;\n            document.body.style['background-attachment'] = \"fixed\";\n            document.body.style['background-repeat'] = \"no-repeat\";\n            document.body.style['background-size'] = \"cover\";\n        }\n    })\n\n    function handleChange(ev) {\n\n        let reader = new FileReader();\n\n        if (ev.target.files.length !== 0 && ev.target.files[0].size < 2000000) {\n            reader.readAsDataURL(ev.target.files[0]);\n\n            reader.onload = i => {\n\n                localStorage.setItem('bckgrd', i.target.result);\n                document.body.style['background-image'] = `url(\"${i.target.result}\")`;\n                document.body.style['background-attachment'] = \"fixed\";\n                document.body.style['background-repeat'] = \"no-repeat\";\n                document.body.style['background-size'] = \"cover\";\n\n            }\n        }\n\n    }\n\n    function AddBackgroundHandler() {\n        inputFile.current.click();\n    }\n\n    return (\n        <div className={classes.root}>\n            <Tooltip title=\"Custom Background\" aria-label=\"Custom Background\">\n                <Fab color=\"secondary\" size=\"medium\" onClick={AddBackgroundHandler} aria-label=\"edit\">\n                    <AddPhotoIcon />\n                </Fab>\n            </Tooltip>\n            <input style={{ display: 'none' }} ref={inputFile} onChange={handleChange} type='file' accept=\"image/png, image/jpeg ,image/jpg\" />\n        </div >\n    );\n\n}","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Add from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    info: {\n        maxWidth:'19vw',\n        padding:'1px 5px',\n        '& p':{\n            fontSize:'0.5em'\n        }\n    }\n\n});\n\n\nexport default function NoteInput(props) {\n    const classes = useStyles();\n    const [note, setNote] = useState(\"\");\n    let inputRef = React.createRef();\n\n    function handleChange(e) {\n        setNote(e.target.value);\n    }\n\n    function handleEnterToSubmit(e) {\n        if (e.keyCode === 13 && note.trim() !== \"\") {\n\n            props.addNoteToNotepad(note);\n            e.target.value = \"\";\n            setNote(\"\");\n        }\n    }\n\n    function handleClickSubmit() {\n\n        if (note.trim() !== \"\") {\n            props.addNoteToNotepad(note);\n            inputRef.current.value = \"\";\n            setNote(\"\");\n        }\n\n    }\n\n    const inputProps = {\n        onKeyDown: handleEnterToSubmit,\n        ref: inputRef,\n        maxlength: 280\n    }\n\n    const InputProps = {\n        endAdornment: (\n            <InputAdornment onClick={handleClickSubmit} position=\"end\">\n                <Add />\n            </InputAdornment>\n        )\n    }\n\n    return (\n\n        <React.Fragment>\n            <TextField onChange={handleChange} autoFocus margin=\"dense\" inputProps={inputProps} InputProps={InputProps} />\n            <div className={classes.info}>\n                <p>Tips: Rearrange notes by dragging. Double click a note to delete.</p>\n            </div>\n        </React.Fragment>\n\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport { ReactSortable, Sortable, Swap } from \"react-sortablejs\";\nimport NoteInput from './NoteInput'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { nanoid } from 'nanoid'\n\nconst useStyles = makeStyles({\n    root:{\n        position: \"absolute\",\n        top: '3vh',\n        right:'1vw'\n    },\n    notepadDrawer: {\n        padding: '1px 10px'\n    },\n    card: {\n        maxWidth: '19vw',\n        margin: '5px 1px'\n    }\n});\n\n// Sortable.mount(new Swap());\n\nexport default function TemporaryDrawer() {\n    const classes = useStyles();\n    const [notepadState, setNotepadState] = useState(false);\n    const [notes, setNotes] = useState([]);\n\n    useEffect(() => {\n        if (localStorage.getItem('notes') !== null) {\n            setNotes(JSON.parse(localStorage.getItem('notes')))\n        }\n    }, [])\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setNotepadState(open);\n    };\n\n\n    const addNoteToNotepad = (note) => {\n\n        let temp = [{ id: nanoid(10), value: note }, ...notes];\n        setNotes(temp);\n        localStorage.setItem('notes', JSON.stringify(temp));\n\n    }\n\n    const handleDelete = (id) => (e) => {\n\n        let temp = notes.filter(i => (i.id !== id));\n        setNotes(temp);\n        localStorage.setItem('notes', JSON.stringify(temp));\n    }\n\n    const noteCards = (i) => (\n        <Card onDoubleClick={handleDelete(i.id)} key={i.id} className={classes.card}>\n            <CardContent>\n                <Typography variant=\"caption\" component=\"p\">\n                    {i.value}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <div className={classes.root}>\n\n                <Tooltip title=\"Add Note\" aria-label=\"Add Note\">\n                    <Fab onClick={toggleDrawer(true)} size=\"medium\" color=\"secondary\" aria-label=\"edit\">\n                        <EditIcon />\n                    </Fab>\n                </Tooltip>\n                <Drawer anchor='right' open={notepadState} onClose={toggleDrawer(false)}>\n                    <div\n                        className={classes.notepadDrawer}\n                        role=\"presentation\"\n                    //onClick={toggleDrawer(false)}\n                    // onKeyDown={toggleDrawer(false)}\n                    >\n\n                        <NoteInput addNoteToNotepad={addNoteToNotepad} />\n\n                        <ReactSortable swapThreshold={0.5} list={notes} setList={setNotes}>\n                            {notes.map(i => noteCards(i))}\n                        </ReactSortable>\n\n                    </div>\n                </Drawer>\n\n        </div>\n    );\n}","import React from 'react';\nimport Search from '../Search';\nimport ShortNews from '../ShortNews'\nimport CustomBackground from '../CustomBackground'\nimport Notepad from '../Notepad'\n\nfunction App() {\n\n  return (\n    <div>\n      <Search />\n      <Notepad/>\n      <ShortNews/>\n      <CustomBackground />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}