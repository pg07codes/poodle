{"version":3,"sources":["components/Notepad/NoteInput/index.js","components/Notepad/index.js","components/Search/Filters/index.js","components/Search/index.js","helpers/parseSearchQuery.js","helpers/getShortNews.js","components/ShortNews/index.js","components/CustomBackground/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","info","maxWidth","padding","fontSize","NoteInput","props","classes","useState","note","setNote","inputRef","React","createRef","inputProps","onKeyDown","e","keyCode","trim","addNoteToNotepad","target","value","ref","maxlength","InputProps","endAdornment","InputAdornment","onClick","current","position","Fragment","TextField","onChange","margin","className","root","card","TemporaryDrawer","notepadState","setNotepadState","notes","setNotes","useEffect","localStorage","getItem","JSON","parse","toggleDrawer","open","event","type","key","Button","Drawer","anchor","onClose","role","temp","id","nanoid","setItem","stringify","swapThreshold","list","setList","map","i","Card","onDoubleClick","filter","CardContent","Typography","variant","component","noteCards","Filters","setFilter","Grid","container","justify","item","xs","isSelected","Chip","icon","label","clickable","newFilter","size","color","deleteIcon","chips","Search","searchQuery","setSearchQuery","query","url","window","parseSearchQuery","md","fullWidth","sm","lessThanTwelveHourAgo","date","Date","now","a","hn","console","log","fetchedAt","news","fetch","fetchedIds","json","slice","fetchingNews","Promise","all","fetchedNews","resp","fetchedNewsObject","maxHeight","fullList","width","ShortNews","newsGroupState","setNewsGroupState","setNews","getShortNews","then","Paper","title","href","by","CustomBackground","document","body","style","ev","reader","FileReader","files","length","readAsDataURL","onload","result","accept","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a4d6d507.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Add from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    info: {\n        maxWidth:'19vw',\n        padding:'1px 5px',\n        '& p':{\n            fontSize:'0.5em'\n        }\n    }\n\n});\n\n\nexport default function NoteInput(props) {\n    const classes = useStyles();\n    const [note, setNote] = useState(\"\");\n    let inputRef = React.createRef();\n\n    function handleChange(e) {\n        setNote(e.target.value);\n    }\n\n    function handleEnterToSubmit(e) {\n        if (e.keyCode === 13 && note.trim() !== \"\") {\n\n            props.addNoteToNotepad(note);\n            e.target.value = \"\";\n            setNote(\"\");\n        }\n    }\n\n    function handleClickSubmit() {\n\n        if (note.trim() !== \"\") {\n            props.addNoteToNotepad(note);\n            inputRef.current.value = \"\";\n            setNote(\"\");\n        }\n\n    }\n\n    const inputProps = {\n        onKeyDown: handleEnterToSubmit,\n        ref: inputRef,\n        maxlength: 280\n    }\n\n    const InputProps = {\n        endAdornment: (\n            <InputAdornment onClick={handleClickSubmit} position=\"end\">\n                <Add />\n            </InputAdornment>\n        )\n    }\n\n    return (\n\n        <React.Fragment>\n            <TextField onChange={handleChange} margin=\"dense\" inputProps={inputProps} InputProps={InputProps} />\n            <div className={classes.info}>\n                <p>Tips: Rearrange notes by dragging. Double click a note to delete.</p>\n            </div>\n        </React.Fragment>\n\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport { ReactSortable } from \"react-sortablejs\";\nimport NoteInput from './NoteInput'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { nanoid } from 'nanoid'\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '1px 10px'\n    },\n    card: {\n        maxWidth:'19vw',\n        margin: '5px 1px'\n    }\n});\n\nexport default function TemporaryDrawer() {\n    const classes = useStyles();\n    const [notepadState, setNotepadState] = useState(false);\n    const [notes, setNotes] = useState([]);\n\n    useEffect(() => {\n        if (localStorage.getItem('notes') !== null) {\n            setNotes(JSON.parse(localStorage.getItem('notes')))\n        }\n    }, [])\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setNotepadState(open);\n    };\n\n\n    const addNoteToNotepad = (note) => {\n\n        let temp = [{ id: nanoid(10), value: note }, ...notes];\n        setNotes(temp);\n        localStorage.setItem('notes', JSON.stringify(temp));\n\n    }\n\n    const handleDelete = (id) => (e) => {\n\n        let temp = notes.filter(i => (i.id !== id));\n        setNotes(temp);\n        localStorage.setItem('notes', JSON.stringify(temp));\n    }\n\n    const noteCards = (i) => (\n        <Card onDoubleClick={handleDelete(i.id)} key={i.id} className={classes.card}>\n            <CardContent>\n                <Typography variant=\"caption\" component=\"p\">\n                    {i.value}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <div>\n\n            <React.Fragment>\n                <Button onClick={toggleDrawer(true)}>\n                    <CreateIcon />\n                </Button>\n                <Drawer anchor='right' open={notepadState} onClose={toggleDrawer(false)}>\n                    <div\n                        className={`${classes.root}`}\n                        role=\"presentation\"\n                    //onClick={toggleDrawer(false)}\n                    // onKeyDown={toggleDrawer(false)}\n                    >\n\n                        <NoteInput addNoteToNotepad={addNoteToNotepad} />\n\n                        <ReactSortable swapThreshold={0.3} list={notes} setList={setNotes}>\n                            {notes.map(i => noteCards(i))}\n                        </ReactSortable>\n\n                    </div>\n                </Drawer>\n            </React.Fragment>\n\n        </div>\n    );\n}","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport DoneIcon from '@material-ui/icons/Done'\nimport FaceIcon from '@material-ui/icons/Face'\nimport Chip from '@material-ui/core/Chip'\n\n\nexport default function Filters() {\n\n    const [filter, setFilter] = useState(\"\");\n\n    let onClickHandler = (newFilter) => (e) => {\n        setFilter(newFilter);\n    }\n\n    const chips = (filter, isSelected) => (\n        <Grid item xs key={filter}>\n            <Chip\n                icon={<FaceIcon />}\n                label={filter}\n                clickable\n                onClick={onClickHandler(filter)}\n                size='small'\n                color=\"primary\"\n                variant = {(isSelected ? \"outlined\" : \"default\")}\n                deleteIcon={<DoneIcon />}\n            />\n        </Grid>\n    );\n\n    return (\n\n        <Grid container justify=\"center\">\n\n            <Grid item xs={3}></Grid> {/*dummy items for proper alignment  */}\n\n            {[\"ABC\", \"PQR\", \"XYZ\"].map(e => chips(e, (filter === e ? false : true)))}\n\n            <Grid item xs={3}></Grid>  {/* dummy items for proper alignment*/}\n\n        </Grid>\n\n    );\n}","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport parseSearchQuery from './../../helpers/parseSearchQuery'\nimport Notepad from './../Notepad'\n\nimport Filters from './Filters'\n\nexport default function Search() {\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    function handleChange(e) {\n        setSearchQuery(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        // Handling Enter Press for submit\n        if (e.keyCode === 13) {\n            parseSearchQuery(searchQuery);\n            e.target.value = \"\";\n            setSearchQuery(\"\");\n        }\n\n    }\n\n    const inputProps = {\n        onKeyDown: handleSubmit\n    }\n\n    const InputProps = {\n        endAdornment: (\n            <InputAdornment position=\"end\">\n                <SearchIcon />\n            </InputAdornment>\n        )\n    }\n\n    return (\n\n        <React.Fragment>\n\n            <Grid container>\n\n                <Grid item xs={2}  md={3} />   {/* dummy */}\n\n                <Grid item xs={8}  md={6}>\n\n                    <TextField onChange={handleChange} fullWidth={true} margin=\"normal\" inputProps={inputProps} InputProps={InputProps} />\n\n                </Grid>\n\n                <Grid item xs sm={1} md={2} />\n                <Grid item xs={1}  md={1} >\n\n                    <Notepad />\n\n                </Grid>\n\n            </Grid>\n\n            <Filters />\n\n        </React.Fragment>\n\n\n    );\n}\n","\nexport default function parseSearchQuery (query){\n    let url=`https://google.com/search?q=${query}`;\n    window.open(url,'_blank');\n}","\n\nconst lessThanTwelveHourAgo = (date) => {\n  const H = 12 * 1000 * 60 * 60;\n  const twelveHourAgo = Date.now() - H;\n  return date > twelveHourAgo;\n}\n\nexport default async function () {\n\n  \n  if (localStorage.getItem('hn') !== null) {\n    // hn has been fetched\n\n    let hn = JSON.parse(localStorage.getItem('hn'));\n\n    console.log('already fetched at', hn.fetchedAt)\n    if (lessThanTwelveHourAgo(hn.fetchedAt)) { // self explanatory\n      \n      return (hn.news);\n    }\n    \n\n  }\n\n  // either hn never fetched or fetchedTwelve hours ago\n  let fetchedIds = await fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty\");\n  fetchedIds = await fetchedIds.json()\n  fetchedIds = fetchedIds.slice(0, 31)\n  \n  // parallel fetching of all the news here\n  let fetchingNews = fetchedIds.map(id => fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json?print=pretty`));\n  let fetchedNews = await Promise.all([...fetchingNews]);\n  fetchedNews = fetchedNews.map(resp => resp.json());\n  fetchedNews = await Promise.all([...fetchedNews]);\n  \n\n  let fetchedNewsObject = { fetchedAt: Date.now(), news: fetchedNews };\n  localStorage.setItem('hn', JSON.stringify(fetchedNewsObject));\n\n  return fetchedNewsObject.news;\n\n};","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport getShortNews from './../../helpers/getShortNews'\n\nconst useStyles = makeStyles({\n    root:{\n        maxHeight:\"60vh !important\"\n    },\n    fullList: {\n        width: 'auto' // nothing happening from it man.\n    }\n});\n\nexport default function ShortNews() {\n    const classes = useStyles();\n    const [newsGroupState, setNewsGroupState] = useState(false);\n    const [news, setNews] = useState([]);\n\n    useEffect(() => {\n        \n        getShortNews().then((resp) => {\n            setNews(resp)\n        })\n\n    },[])\n\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setNewsGroupState(open);\n    };\n\n    return (\n        \n            <React.Fragment>\n                <Button onClick={toggleDrawer(true)}> news </Button>\n                <Drawer anchor='bottom' open={newsGroupState} onClose={toggleDrawer(false)}>\n                    <div\n                        className={`${classes.fullList} ${classes.root}`}\n                        role=\"presentation\"\n                        onClick={toggleDrawer(false)}\n                        onKeyDown={toggleDrawer(false)}\n                    >\n\n                        {news.map(i => (\n                            <Paper key={i.id}>\n                                <h2>{i.title}</h2>\n                                <a href={i.url} target=\"_blank\" >click here to read</a>\n                                <h5>{i.by}</h5>\n                            </Paper>\n\n                        ))}\n\n\n                    </div>\n                </Drawer>\n            </React.Fragment>\n\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n\n});\n\nexport default function CustomBackground() {\n\n    useEffect(() => {\n\n        if (localStorage.getItem('bckgrd') !== null) {\n            document.body.style['background-image'] = `url(\"${localStorage.getItem('bckgrd')}\")`;\n            document.body.style['background-attachment'] = \"fixed\";\n            document.body.style['background-repeat'] = \"no-repeat\";\n            document.body.style['background-size'] = \"cover\";\n        }\n    })\n\n    function handleChange(ev) {\n\n        let reader = new FileReader();\n\n        if (ev.target.files.length != 0 && ev.target.files[0].size < 2000000) {\n            reader.readAsDataURL(ev.target.files[0]);\n            \n            reader.onload = i => {\n\n                localStorage.setItem('bckgrd', i.target.result);\n                document.body.style['background-image'] = `url(\"${i.target.result}\")`;\n                document.body.style['background-attachment'] = \"fixed\";\n                document.body.style['background-repeat'] = \"no-repeat\";\n                document.body.style['background-size'] = \"cover\";\n\n            }\n        }\n\n\n\n    }\n\n    return (\n        <div>\n            <input onChange={handleChange} type='file' accept=\"image/png, image/jpeg ,image/jpg\" />\n        </div>\n    );\n\n}","import React from 'react';\nimport Search from '../Search';\nimport ShortNews from '../ShortNews'\nimport CustomBackground from '../CustomBackground'\n\nfunction App() {\n  return (\n    <div>\n      <Search/>\n      <ShortNews/>\n      <CustomBackground/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}